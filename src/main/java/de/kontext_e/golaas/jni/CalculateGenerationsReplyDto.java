package de.kontext_e.golaas.jni;

/*Generated by MPS */

import javax.annotation.Generated;
import de.kontext_e.golaas.model.ReplyDto;
import java.util.Arrays;

@Generated(value = "MPS JNI Java Generator")
public class CalculateGenerationsReplyDto implements ReplyDto {
  private byte returnCode;
  private byte width;
  private byte height;
  private byte[] livingX;
  private byte[] livingY;

  public CalculateGenerationsReplyDto(byte returnCode, byte width, byte height, byte[] livingX, byte[] livingY) {
    this.returnCode = returnCode;
    this.width = width;
    this.height = height;
    this.livingX = livingX;
    this.livingY = livingY;
  }

  public byte getReturnCode() {
    return returnCode;
  }
  public byte getWidth() {
    return width;
  }
  public byte getHeight() {
    return height;
  }
  public byte[] getLivingX() {
    return livingX;
  }
  public byte[] getLivingY() {
    return livingY;
  }


  @Override
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("CalculateGenerationsDto");
    stringBuilder.append("{ ");
    stringBuilder.append("returnCode=" + returnCode + ", ");
    stringBuilder.append("width=" + width + ", ");
    stringBuilder.append("height=" + height + ", ");
    stringBuilder.append("livingX=" + livingX + ", ");
    stringBuilder.append("livingY=" + livingY + ", ");
    stringBuilder.append("}");
    return stringBuilder.toString();
  }


  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;

    result = 31 * result + (int) returnCode;
    result = 31 * result + (int) width;
    result = 31 * result + (int) height;
    result = 31 * result + Arrays.hashCode(livingX);
    result = 31 * result + Arrays.hashCode(livingY);
    return result;
  }


  @Override
  public boolean equals(Object object) {
    if (this == object) {
      return true;
    }
    if (object == null) {
      return false;
    }
    if (getClass() != object.getClass()) {
      return false;
    }

    CalculateGenerationsReplyDto other = (CalculateGenerationsReplyDto) object;
    if (returnCode != other.returnCode) {
      return false;
    }
    if (width != other.width) {
      return false;
    }
    if (height != other.height) {
      return false;
    }
    if (!(Arrays.equals(livingX, other.livingX))) {
      return false;
    }
    if (!(Arrays.equals(livingY, other.livingY))) {
      return false;
    }

    return true;
  }
}
